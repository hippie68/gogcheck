#!/bin/bash

# User variables

debug=false

color_success='\e[92m'
color_error='\e[91m'
color_file='\e[95m'
color_debug='\e[90m'
color_reset='\e[39m'

# Script starts below

filecount=0
errorcount=0 # global number of checksum errors
errorfiles=""

debugmessage() { [[ $debug == true ]] && echo -e "${color_debug}$1${color_reset}"; }

# this function accepts .exe files
hashcheck() {
  # skip should the .exe be a directory (for whatever reason)
  [[ -d $1 ]] && { debugmessage "Skipped directory '$1'"; return; }
  # skip when no .bin files exist
  ls "${1%.exe}"-*.bin &> /dev/null
  if [[ $? != 0 ]]; then
    debugmessage "No bin files found for '$1'"
    return
  fi

  echo -e "Looking into ${color_file}$1${color_reset} ..."
  checksums="" # list of known checksums the current .exe provides
  crcstring=$(strings "$1" | grep -i '#GOGCRCSTRING') # extract GOGCRCSTRING from .exe
  [[ $crcstring == "" ]] && { debugmessage "No checksums found in '$1'"; return; }
  crcstring=${crcstring%#GOGCRCSTRING*} # remove the string name, leaving numbers
  debugmessage "Raw GOGCRCSTRING: $crcstring"
  multiplier=${crcstring: -2} # the 2-digit number before '#GOGCRCSTRING'
  crcstring=${crcstring::-2} # remove the 2-digit number
  md5hashes=${crcstring:(( - 10#$multiplier * 32 ))} # omit characters not part of the hashes
  md5hashes=${md5hashes,,} # set md5 hashes to lowercase
  debugmessage "Raw MD5 hashes: $md5hashes"
  echo -n "Found $((multiplier)) checksum"
  if [[ $multiplier == "01" ]]; then echo ":"; else echo "s:"; fi

  for i in $(seq -w 01 "$multiplier"); do
    checksum=${md5hashes:(( 32 * ((10#$i - 1)) )):32}
    [[ $checksum == "" ]] && checksum="[empty]                         "
    echo "   $checksum"
    checksums+=" $checksum" # add current checksum to known checksums
  done

  for bin in "${1%.exe}"-*.bin; do
    [[ -f $bin ]] || {
      echo "Bin file(s) not found: ${color_error}'$bin'${color_reset}";
      continue;
    }
    ((filecount++))
    filename=${bin##*/}
    echo "Verifying $filename ..."
    result=$(md5sum "$bin")
    checksum=${result%  *}
    if [[ $checksums == *"$checksum"* ]] # is checksum known?
    then echo -e "-> $checksum ${color_success}OK${color_reset}"
    else
      echo -e "-> $checksum ${color_error}ERROR${color_reset}"
      ((errorcount++))
      errorfiles+="$filename
"
    fi
  done
  echo
}

# use current directory if no arguments given
[[ "$1" == "" ]] && set -- .

while [[ "$1" != "" ]]; do

  # for directory arguments, hashcheck all .exe files inside the directory
  if [[ -d "$1" ]]; then

    # skip directories without .exe files
    ls "$1"/*.exe &> /dev/null
    if [[ $? != 0 ]]; then
      debugmessage "Skipped directory without EXE files: '$1'"
      shift
      continue
    fi

    for exe in "$1"/*.exe; do
      hashcheck "$exe"
    done

  # for other arguments, skip those that are not .exe files
  elif [[ -f "$1" ]]; then
    if [[ ${1: -4} == ".exe" ]]; then hashcheck "$1"
    else debugmessage "Skipped non-EXE file: '$1'"
    fi
  fi

  shift
done

echo -n "$filecount bin file(s), "
if [[ $errorcount -gt 0 ]]; then
  echo -en "${color_error}"
else
  echo -en "${color_success}"
fi
echo "$errorcount checksum error(s)"
if [[ $errorcount -gt 0 ]]; then echo "$errorfiles"; fi
exit "$errorcount"
