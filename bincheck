#!/bin/bash

# User settings

debug=false
GREEN='\e[92m'
RED='\e[91m'
GRAY='\e[37m'
PURPLE='\e[95m'
CYAN='\e[96m'
RESET='\e[39m'

# Script starts below

filecount=0
errorcount=0 # global number of checksum errors

debugmessage() { [[ $debug == true ]] && echo -e "${GRAY}$1${RESET}"; }

# this function accepts .exe files
hashcheck() {
  # skip should the .exe be a directory (for whatever reason)
  [[ -d "$1" ]] && { debugmessage "Skipped directory '$1'"; return; }
  # skip when no .bin files exist
  ls "${1%.exe}"-*.bin &> /dev/null
  if [[ "$?" != 0 ]]; then
    debugmessage "No BIN files found for '$1'"
    return
  fi

  errorcount_local=0 # number of current bin files' checksum errors

  echo -e "Looking into ${PURPLE}$1${RESET}"
  checksums="" # list of known checksums the current .exe provides
  crcstring=$(strings "$1" | grep -i '#GOGCRCSTRING') # extract GOGCRCSTRING from .exe
  [[ $crcstring == "" ]] && { debugmessage "No checksums found in '$1'"; return; }
  crcstring=${crcstring%#GOGCRCSTRING*} # remove the string name, leaving numbers
  debugmessage "Raw GOGCRCSTRING: $crcstring"
  multiplier=${crcstring: -2} # the 2-digit number before '#GOGCRCSTRING'

  echo -n "Found $((multiplier)) checksum"
  if [[ $multiplier == "01" ]]; then echo ":"; else echo "s:"; fi

  crcstring=${crcstring::-2} # remove the 2-digit number
  md5hashes=${crcstring:(( - 10#$multiplier * 32 ))} # omit characters not part of the hashes
  md5hashes=${md5hashes,,} # set md5 hashes to lowercase
  debugmessage "Raw MD5 hashes: $md5hashes"

  for i in $(seq -w 01 "$multiplier"); do
    checksum=${md5hashes:(( 32 * ((10#$i - 1)) )):32}
    [[ "$checksum" == "" ]] && checksum="[empty]                         "
    echo -e "  - ${CYAN}$checksum${RESET}"
    checksums+=" $checksum" # add current checksum to known checksums
  done

  echo "Verifying bin files:"
  for bin in "${1%.exe}"-*.bin; do
    [[ -f $bin ]] || {
      echo "  ${RED}BIN file(s) not found: ${PURPLE}'$bin'${RESET}";
      ((errorcount_local++))
      continue;
    }
    ((filecount++))
    filename=${bin##*/}
    echo -en "  - ${PURPLE}$filename${RESET} "
    result=$(md5sum "$bin")
    checksum=${result%  *}
    if [[ "$checksums" == *"$checksum"* ]] # is checksum known?
    then echo -e "${CYAN}$checksum ${GREEN}OK${RESET}"
    else
      echo -e "${RED}$checksum ERROR${RESET}"
      ((errorcount++))
      ((errorcount_local++))
    fi
  done

  if [[ errorcount_local -gt 0 ]]; then
    echo -e "Encountered ${RED}$errorcount_local errors${RESET}!"
  else
    echo -e "Done."
  fi
  echo
}

# use current directory if no arguments given
[[ "$1" == "" ]] && set -- .

while [[ "$1" != "" ]]; do

  # for directory arguments, hashcheck all .exe files inside the directory
  if [[ -d "$1" ]]; then

    # skip directories without .exe files
    ls "$1"/*.exe &> /dev/null
    if [[ "$?" != 0 ]]; then
      debugmessage "Skipped directory without EXE files: '$1'"
      shift
      continue
    fi

    for exe in "$1"/*.exe; do
      hashcheck "$exe"
    done

  # for other arguments, skip those that are not .exe files
  elif [[ -f "$1" ]]; then
    if [[ "${1: -4}" == ".exe" ]]; then hashcheck "$1"
    else debugmessage "Skipped non-EXE file: '$1'"
    fi
  fi

  shift
done

echo -n "$filecount bin file(s), "
if [[ "$errorcount" -gt 0 ]]; then
  echo -en "${RED}"
else
  echo -en "${GREEN}"
fi
echo -n "$errorcount checksum error(s)"
exit "$errorcount"
